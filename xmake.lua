set_project("SoC")
set_version("0.1.0")
set_xmakever("2.9.0")
set_policy("check.auto_ignore_flags", false)
set_policy("build.c++.modules.std", false)
set_policy("build.c++.modules.reuse.nocheck", true)
-- 在当前并行度和依赖复杂度下，一阶段编译模型速度更快
set_policy("build.c++.modules.two_phases", false)
set_encodings("utf-8")
add_moduledirs("script/toolchains/xmake")
includes("script/toolchains/xmake/*.lua")
includes("script/xmake/*.lua")
set_warnings("allextra")
set_languages("clatest", "cxxlatest")
set_exceptions("no-cxx")
set_allowedmodes(support_rules_table)
set_defaultmode("debug")
set_config("march", "armv7e-m")
set_config("debug_info", "minsizerel")
local build_mode = get_config("mode")
if build_mode then
    set_rules(get_config("mode"))
    add_defines(string.format("SOC_BUILD_MODE_%s", string.upper(get_config("mode"))))
end
add_defines("STM32F407xx", "USE_FULL_LL_DRIVER", "HSE_VALUE=8000000u")
add_options("assert")
add_cxflags("-mtune=cortex-m4", "-ffunction-sections", "-fdata-sections", "-Wno-c23-extensions", "-Wimplicit-fallthrough", "-Wno-unknown-pragmas")
add_cxxflags("-fno-rtti", "-Wno-psabi")
add_ldflags("-Wl,--gc-sections", "-nostartfiles", { force = true })
add_ldflags("gcc::-Wno-psabi")
includes("*/xmake.lua")
